Version: "0.1"
Environment:
  Name: Grafter
  Description: Griddly port of the crafter environment from https://danijar.com/project/crafter/.
  Observers:
    Entity:
      IncludeMasks: true
      IncludePlayerId: [ player ]
      IncludeRotation: [ player ]
      GlobalVariableMapping:
        - inv_wood_sword
        - inv_stone_sword
        - inv_iron_sword
        - inv_wood_pickaxe
        - inv_stone_pickaxe
        - inv_iron_pickaxe
        - inv_sapling
        - inv_stone
        - inv_coal
        - inv_wood
        - inv_iron
        - inv_diamond
        - inv_food
        - inv_drink
        - inv_energy
        - health

    Sprite2D:
      TileSize: 10
      RotateAvatarImage: false
  Termination:
    End:
      - eq: [ player_count, 0 ]
  Variables:

    # ACHEIVEMENTS
    - Name: ach_collect_coal
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_diamond
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_drink
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_iron
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_sapling
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_stone
      InitialValue: 0
      PerPlayer: true
    - Name: ach_collect_wood
      InitialValue: 0
      PerPlayer: true
    - Name: ach_defeat_skeleton
      InitialValue: 0
      PerPlayer: true
    - Name: ach_defeat_zombie
      InitialValue: 0
      PerPlayer: true
    - Name: ach_defeat_player
      InitialValue: 0
      PerPlayer: true
    - Name: ach_eat_cow
      InitialValue: 0
      PerPlayer: true
    - Name: ach_eat_plant
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_iron_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_iron_sword
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_stone_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_stone_sword
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_wood_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: ach_make_wood_sword
      InitialValue: 0
      PerPlayer: true
    - Name: ach_place_furnace
      InitialValue: 0
      PerPlayer: true
    - Name: ach_place_plant
      InitialValue: 0
      PerPlayer: true
    - Name: ach_place_stone
      InitialValue: 0
      PerPlayer: true
    - Name: ach_place_table
      InitialValue: 0
      PerPlayer: true
    - Name: ach_wake_up
      InitialValue: 0
      PerPlayer: true


    # INVENTORY
    - Name: inv_wood_sword
      InitialValue: 0
      PerPlayer: true
    - Name: inv_stone_sword
      InitialValue: 0
      PerPlayer: true
    - Name: inv_iron_sword
      InitialValue: 0
      PerPlayer: true
    - Name: inv_wood_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: inv_stone_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: inv_iron_pickaxe
      InitialValue: 0
      PerPlayer: true
    - Name: inv_fence
      InitialValue: 0
      PerPlayer: true

    - Name: inv_sapling
      InitialValue: 0
      PerPlayer: true
    - Name: inv_stone
      InitialValue: 0
      PerPlayer: true
    - Name: inv_coal
      InitialValue: 0
      PerPlayer: true
    - Name: inv_iron
      InitialValue: 0
      PerPlayer: true
    - Name: inv_diamond
      InitialValue: 0
      PerPlayer: true
    - Name: inv_wood
      InitialValue: 0
      PerPlayer: true

    # Player faculties
    - Name: inv_food
      InitialValue: 9
      PerPlayer: true
    - Name: inv_drink
      InitialValue: 9
      PerPlayer: true
    - Name: inv_energy
      InitialValue: 9
      PerPlayer: true
    - Name: health
      InitialValue: 9
      PerPlayer: true

    # Misc
    - Name: near_table
      InitialValue: 0
      PerPlayer: true
    - Name: near_furnace
      InitialValue: 0
      PerPlayer: true
    - Name: damage
      InitialValue: 1
      PerPlayer: true
    - Name: is_sleeping
      InitialValue: 0
      PerPlayer: true

    # Player stats
    - Name: fatigue
      InitialValue: 0
      PerPlayer: true
    - Name: recover
      InitialValue: 0
      PerPlayer: true
    - Name: hunger
      InitialValue: 0
      PerPlayer: true
    - Name: thirst
      InitialValue: 0
      PerPlayer: true

    # So the engine knows when a player is dead
    - Name: player_done
      InitialValue: 0
      PerPlayer: true
    - Name: player_count
      InitialValue: 0

  Player:
    Count: 8
    AvatarObject: player
    Observer:
      HighlightPlayers: false
      TrackAvatar: true
      RotateWithAvatar: false
      Height: 9
      Width: 9

  Levels:
    - |

Actions:

  - Name: init_player
    InputMapping:
      Internal: true
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
    Behaviours:
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - incr: player_count


  - Name: update_player_stats
    InputMapping:
      Internal: true
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
    Behaviours:

      # Just repeat this action every time step
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - exec:
                Action: update_player_stats
                ActionId: 1
                Delay: 1

      # handle fatigue
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - if:
                Conditions:
                  eq: [ is_sleeping, 1 ]
                OnTrue:
                  - sub: [ fatigue, 1 ]
                OnFalse:
                  - add: [ fatigue, 1 ]
            - if:
                Conditions:
                  lt: [ fatigue, -10 ]
                OnTrue:
                  - set: [ fatigue, 0 ]
                  - add: [ inv_energy, 1 ]
                  - if:
                      Conditions:
                        gte: [ inv_energy, 9 ]
                      OnTrue:
                        - set: [ is_sleeping, 0 ]
                        - if:
                            Conditions:
                              lt: [ ach_wake_up, 1 ]
                            OnTrue:
                              - set: [ ach_wake_up, 1 ]
                              - reward: 1
                              - set_tile: 0
            - if:
                Conditions:
                  gt: [ fatigue, 30 ]
                OnTrue:
                  - set: [ fatigue, 0 ]
                  - sub: [ inv_energy, 1 ]

      # handle hunger
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - if:
                Conditions:
                  eq: [ is_sleeping, 1 ]
                OnTrue:
                  - add: [ hunger, 1 ]
                OnFalse:
                  - add: [ hunger, 2 ]
            - if:
                Conditions:
                  gt: [ hunger, 50 ]
                OnTrue:
                  - set: [ hunger, 0 ]
                  - sub: [ inv_food, 1 ]


      # handle thirst
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - if:
                Conditions:
                  eq: [ is_sleeping, 1 ]
                OnTrue:
                  - add: [ thirst, 1 ]
                OnFalse:
                  - add: [ thirst, 2 ]
            - if:
                Conditions:
                  gt: [ thirst, 30 ]
                OnTrue:
                  - set: [ thirst, 0 ]
                  - sub: [ inv_drink, 1 ]


      # handle health recovery
      - Src:
          Object: player
        Dst:
          Object: player
          Commands:
            - if:
                Conditions:
                  and:
                    - gt: [ inv_food, 0 ]
                    - gt: [ inv_drink, 0 ]
                    - or:
                        - gt: [ inv_energy, 0 ]
                        - eq: [ is_sleeping, 1 ]
                OnTrue:
                  - if:
                      Conditions:
                        eq: [ is_sleeping, 1 ]
                      OnTrue:
                        - add: [ recover, 4 ]
                      OnFalse:
                        - add: [ recover, 2 ]
                OnFalse:
                  - if:
                      Conditions:
                        eq: [ is_sleeping, 1 ]
                      OnTrue:
                        - sub: [ recover, 1 ]
                      OnFalse:
                        - sub: [ recover, 2 ]
            - if:
                Conditions:
                  gt: [ recover, 50 ]
                OnTrue:
                  - set: [ recover, 0 ]
                  - if:
                      Conditions:
                        lt: [ health, 9 ]
                      OnTrue:
                        - add: [ health, 1 ]
            - if:
                Conditions:
                  lt: [ recover, -30 ]
                OnTrue:
                  - set: [ recover, 0 ]
                  - sub: [ health, 1 ]
            - if:
                Conditions:
                  lte: [ health, 0 ]
                OnTrue:
                  - set: [ player_done, 1 ]
                  - decr: player_count
                  - remove: true


  - Name: move
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
          Description: "Move Left"
          MetaData:
            image_idx: 1
        2:
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
          Description: "Move Up"
          MetaData:
            image_idx: 2
        3:
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
          Description: "Move Right"
          MetaData:
            image_idx: 3
        4:
          OrientationVector: [ 0, 1 ]
          VectorToDest: [ 0, 1 ]
          Description: "Move Down"
          MetaData:
            image_idx: 4
    Behaviours:
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
          Commands:
            - mov: _dest
            - rot: _dir
            - set_tile: meta.image_idx
        Dst:
          Object: [ grass, path, sand ]
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
          Commands:
            - rot: _dir
            - set_tile: meta.image_idx
        Dst:
          Object: [ cow, water, stone, plant, tree, player, zombie, skeleton, coal, lava, iron, diamond, table, furnace ]

  - Name: do
    InputMapping:
      Relative: true
      Inputs:
        1:
          VectorToDest: [ 0, -1 ]
          Description: "Interact with an object"
    Behaviours:
      # Player eats a (ripe) plant
      - Src:
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ dst.ripe, 1 ]
          Object: player
          Commands:
            - add: [ inv_food, 4 ]
            - if:
                Conditions:
                  lt: [ ach_eat_plant, 1 ]
                OnTrue:
                  - set: [ ach_eat_plant, 1 ]
                  - reward: 1
            - if:
                Conditions:
                  gt: [ inv_food, 9 ]
                OnTrue:
                  - set: [ inv_food, 9 ]
        Dst:
          Object: plant
          Commands:
            - set: [ ripe, 0 ]
            - set_tile: 0
            - exec:
                Action: plant_ripen
                Delay: 30
                ActionId: 1

      # Player collects a fence
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
          Commands:
            - add: [ inv_fence, 1 ]
        Dst:
          Object: fence
          Commands:
            - remove: true

      # Player attacks a zombie
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
        Dst:
          Object: zombie
          Commands:
            - sub: [ dst.health, src.damage ]
            - if:
                Conditions:
                  lte: [ dst.health, 0 ]
                OnTrue:
                  - remove: true
                  - if:
                      Conditions:
                        lt: [ src.ach_defeat_zombie, 1 ]
                      OnTrue:
                        - set: [ src.ach_defeat_zombie, 1 ]
                        - reward: 1


      # Player attacks a skeleton
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
        Dst:
          Object: skeleton
          Commands:
            - sub: [ dst.health, src.damage ]
            - if:
                Conditions:
                  lte: [ dst.health, 0 ]
                OnTrue:
                  - remove: true
                  - if:
                      Conditions:
                        lt: [ src.ach_defeat_skeleton, 1 ]
                      OnTrue:
                        - set: [ src.ach_defeat_skeleton, 1 ]
                        - reward: 1

      # Player attacks a cow
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
        Dst:
          Object: cow
          Commands:
            - sub: [ dst.health, src.damage ]
            - if:
                Conditions:
                  lte: [ dst.health, 0 ]
                OnTrue:
                  - remove: true
                  - add: [ src.inv_food, 6 ]
                  - if:
                      Conditions:
                        gt: [ src.inv_food, 9 ]
                      OnTrue:
                        - set: [ src.inv_food, 9 ]
                  - if:
                      Conditions:
                        lt: [ src.ach_eat_cow, 1 ]
                      OnTrue:
                        - set: [ src.ach_eat_cow, 1 ]
                        - reward: 1

      # Player attacks a player
      - Src:
          Object: player
          Preconditions:
            eq: [ is_sleeping, 0 ]
        Dst:
          Object: player
          Commands:
            - sub: [ dst.health, src.damage ]
            - if:
                Conditions:
                  lte: [ dst.health, 0 ]
                OnTrue:
                  - set: [ dst.player_done, 1 ]
                  - decr: player_count
                  - remove: true
                  - add: [ src.inv_food, dst.inv_food ]
                  - add: [ src.inv_drink, dst.inv_drink ]
                  - add: [ src.inv_wood, dst.inv_wood ]
                  - add: [ src.inv_coal, dst.inv_coal ]
                  - add: [ src.inv_iron, dst.inv_iron ]
                  - if:
                      Conditions:
                        gt: [ src.inv_food, 9 ]
                      OnTrue:
                        - set: [ src.inv_food, 9 ]
                  - if:
                      Conditions:
                        gt: [ src.inv_drink, 9 ]
                      OnTrue:
                        - set: [ src.inv_drink, 9 ]
                  - if:
                      Conditions:
                        gt: [ src.inv_wood, 9 ]
                      OnTrue:
                        - set: [ src.inv_wood, 9 ]
                  - if:
                      Conditions:
                        gt: [ src.inv_coal, 9 ]
                      OnTrue:
                        - set: [ src.inv_coal, 9 ]
                  - if:
                      Conditions:
                        gt: [ src.inv_iron, 9 ]
                      OnTrue:
                        - set: [ src.inv_iron, 9 ]
                  - if:
                      Conditions:
                        lt: [ src.ach_defeat_player, 1 ]
                      OnTrue:
                        - set: [ src.ach_defeat_player, 1 ]
                        - reward: 1


  #   tree: {require: {}, receive: {wood: 1}, leaves: grass}
  #   stone: {require: {wood_pickaxe: 1}, receive: {stone: 1}, leaves: path}
  #   coal: {require: {wood_pickaxe: 1}, receive: {coal: 1}, leaves: path}
  #   iron: {require: {stone_pickaxe: 1}, receive: {iron: 1}, leaves: path}
  #   diamond: {require: {iron_pickaxe: 1}, receive: {diamond: 1}, leaves: path}
  #   water: {require: {}, receive: {drink: 1}, leaves: water}
  #   grass: {require: {}, receive: {sapling: 1}, probability: 0.1, leaves: grass}
  - Name: collect
    InputMapping:
      Relative: true
      Inputs:
        1:
          VectorToDest: [ 0, -1 ]
          Description: "Collect wood"
          MetaData:
            action_id: 1
        2:
          VectorToDest: [ 0, -1 ]
          Description: "Collect stone"
          MetaData:
            action_id: 2
        3:
          VectorToDest: [ 0, -1 ]
          Description: "Collect coal"
          MetaData:
            action_id: 3
        4:
          VectorToDest: [ 0, -1 ]
          Description: "Collect iron"
          MetaData:
            action_id: 4
        5:
          VectorToDest: [ 0, -1 ]
          Description: "Collect diamond"
          MetaData:
            action_id: 5
        6:
          VectorToDest: [ 0, -1 ]
          Description: "Collect water"
          MetaData:
            action_id: 6
        7:
          VectorToDest: [ 0, -1 ]
          Description: "Collect saplings"
          MetaData:
            action_id: 7

    Behaviours:
      # Player collects wood from a tree
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - lt: [ inv_wood, 9 ]
                - eq: [ meta.action_id, 1 ]
          Commands:
            - add: [ inv_wood, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_wood, 1 ]
                OnTrue:
                  - set: [ ach_collect_wood, 1 ]
                  - reward: 1
        Dst:
          Object: tree
          Commands:
            - remove: true
            - spawn: grass

      # Player collects stone
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ inv_wood_pickaxe, 1 ]
                - lt: [ inv_stone, 9 ]
                - eq: [ meta.action_id, 2 ]
          Commands:
            - add: [ inv_stone, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_stone, 1 ]
                OnTrue:
                  - set: [ ach_collect_stone, 1 ]
                  - reward: 1
        Dst:
          Object: stone
          Commands:
            - remove: true
            - spawn: path

      # Player collects coal
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ inv_wood_pickaxe, 1 ]
                - lt: [ inv_coal, 9 ]
                - eq: [ meta.action_id, 3 ]
          Commands:
            - add: [ inv_coal, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_coal, 1 ]
                OnTrue:
                  - set: [ ach_collect_coal, 1 ]
                  - reward: 1
        Dst:
          Object: coal
          Commands:
            - remove: true
            - spawn: path

      # Player collects iron
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ inv_stone_pickaxe, 1 ]
                - lt: [ inv_iron, 9 ]
                - eq: [ meta.action_id, 4 ]
          Commands:
            - add: [ inv_iron, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_iron, 1 ]
                OnTrue:
                  - set: [ ach_collect_iron, 1 ]
                  - reward: 1
        Dst:
          Object: iron
          Commands:
            - remove: true
            - spawn: path

      # Player collects diamond
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ inv_iron_pickaxe, 1 ]
                - lt: [ inv_diamond, 9 ]
                - eq: [ meta.action_id, 5 ]
          Commands:
            - add: [ inv_diamond, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_diamond, 1 ]
                OnTrue:
                  - set: [ ach_collect_diamond, 1 ]
                  - reward: 1
        Dst:
          Object: diamond
          Commands:
            - remove: true
            - spawn: path

      # Player collects water
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - lt: [ inv_drink, 9 ]
                - eq: [ meta.action_id, 6 ]
          Commands:
            - add: [ inv_drink, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_drink, 1 ]
                OnTrue:
                  - set: [ ach_collect_drink, 1 ]
                  - reward: 1
        Dst:
          Object: water


      # Player collects a sapling
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 7 ]
                - lt: [ inv_sapling, 9 ]
          Commands:
            - add: [ inv_sapling, 1 ]
            - if:
                Conditions:
                  lt: [ ach_collect_sapling, 1 ]
                OnTrue:
                  - set: [ ach_collect_sapling, 1 ]
                  - reward: 1
        Dst:
          Object: grass
        Probability: 0.1


  #   stone: {uses: {stone: 1}, where: [grass, sand, path, water, lava], type: material}
  #   table: {uses: {wood: 2}, where: [grass, sand, path], type: material}
  #   furnace: {uses: {stone: 4}, where: [grass, sand, path], type: material}
  #   plant: {uses: {sapling: 1}, where: [grass], type: object}
  - Name: place
    InputMapping:
      Relative: true
      Inputs:
        1:
          VectorToDest: [ 0, -1 ]
          Description: "Place a stone"
          MetaData:
            action_id: 1
        2:
          VectorToDest: [ 0, -1 ]
          Description: "Place a table"
          MetaData:
            action_id: 2
        3:
          VectorToDest: [ 0, -1 ]
          Description: "Place a furnace"
          MetaData:
            action_id: 3
        4:
          VectorToDest: [ 0, -1 ]
          Description: "Place a plant"
          MetaData:
            action_id: 4
    Behaviours:
      # Player places a stone
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 1 ]
                - gte: [ inv_stone, 1 ]
          Commands:
            - sub: [ inv_stone, 1 ]
            - if:
                Conditions:
                  lt: [ ach_place_stone, 1 ]
                OnTrue:
                  - set: [ ach_place_stone, 1 ]
                  - reward: 1
        Dst:
          Object: [ grass, sand, path, water, lava ]
          Commands:
            - spawn: stone

      # Player places a table
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 2 ]
                - gte: [ inv_wood, 2 ]
          Commands:
            - sub: [ inv_wood, 2 ]
            - if:
                Conditions:
                  lt: [ ach_place_table, 1 ]
                OnTrue:
                  - set: [ ach_place_table, 1 ]
                  - reward: 1
        Dst:
          Object: [ grass, sand, path ]
          Commands:
            - spawn: table

      # Player places a furnace
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 3 ]
                - gte: [ inv_stone, 4 ]
          Commands:
            - sub: [ inv_stone, 4 ]
            - if:
                Conditions:
                  lt: [ ach_place_furnace, 1 ]
                OnTrue:
                  - set: [ ach_place_furnace, 1 ]
                  - reward: 1
        Dst:
          Object: [ grass, sand, path ]
          Commands:
            - spawn: furnace

      # Player places a plant
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 4 ]
                - gte: [ inv_sapling, 1 ]
          Commands:
            - decr: inv_sapling
            - if:
                Conditions:
                  lt: [ ach_place_plant, 1 ]
                OnTrue:
                  - set: [ ach_place_plant, 1 ]
                  - reward: 1
        Dst:
          Object: grass
          Commands:
            - spawn: plant

  - Name: make
    InputMapping:
      Relative: true
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
          Description: "Make a wood pickaxe"
          MetaData:
            action_id: 1
        2:
          VectorToDest: [ 0, 0 ]
          Description: "Make a stone pickaxe"
          MetaData:
            action_id: 2
        3:
          VectorToDest: [ 0, 0 ]
          Description: "Make an iron pickaxe"
          MetaData:
            action_id: 3
        4:
          VectorToDest: [ 0, 0 ]
          Description: "Make a wood sword"
          MetaData:
            action_id: 4
        5:
          VectorToDest: [ 0, 0 ]
          Description: "Make a stone sword"
          MetaData:
            action_id: 5
        6:
          VectorToDest: [ 0, 0 ]
          Description: "Make an iron sword"
          MetaData:
            action_id: 6
    Behaviours:
      # Player makes a wood pickaxe
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 1 ]
                - gte: [ inv_wood, 1 ]
                - lt: [ inv_wood_pickaxe, 1 ]
          Commands:
            - decr: inv_wood
            - if:
                Conditions:
                  lt: [ ach_make_wood_pickaxe, 1 ]
                OnTrue:
                  - set: [ ach_make_wood_pickaxe, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_wood_pickaxe, 1 ]

      # Player makes a stone pickaxe
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 2 ]
                - gte: [ inv_wood, 1 ]
                - gte: [ inv_stone, 1 ]
                - eq: [ near_table, 1 ]
                - lt: [ inv_stone_pickaxe, 1 ]
          Commands:
            - decr: inv_stone
            - decr: inv_wood
            - if:
                Conditions:
                  lt: [ ach_make_stone_pickaxe, 1 ]
                OnTrue:
                  - set: [ ach_make_stone_pickaxe, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_stone_pickaxe, 1 ]

      # Player makes an iron pickaxe
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 3 ]
                - gte: [ inv_wood, 1 ]
                - gte: [ inv_iron, 1 ]
                - gte: [ inv_coal, 1 ]
                - eq: [ near_furnace, 1 ]
                - eq: [ near_table, 1 ]
                - lt: [ inv_iron_pickaxe, 1 ]
          Commands:
            - decr: inv_coal
            - decr: inv_wood
            - decr: inv_iron
            - if:
                Conditions:
                  lt: [ ach_make_iron_pickaxe, 1 ]
                OnTrue:
                  - set: [ ach_make_iron_pickaxe, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_iron_pickaxe, 1 ]

      # Player makes a wood sword
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 4 ]
                - gte: [ inv_wood, 1 ]
                - lt: [ inv_wood_sword, 1 ]
          Commands:
            - decr: inv_wood
            - if:
                Conditions:
                  lt: [ ach_make_wood_sword, 1 ]
                OnTrue:
                  - set: [ ach_make_wood_sword, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_wood_sword, 1 ]
            - set: [ damage, 2 ]

      # Player makes a stone sword
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 5 ]
                - gte: [ inv_wood, 1 ]
                - gte: [ inv_stone, 1 ]
                - eq: [ near_table, 1 ]
                - lt: [ inv_stone_sword, 1 ]
          Commands:
            - decr: inv_stone
            - decr: inv_wood
            - if:
                Conditions:
                  lt: [ ach_make_stone_sword, 1 ]
                OnTrue:
                  - set: [ ach_make_stone_sword, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_stone_sword, 1 ]
            - set: [ damage, 3 ]

      # Player makes an iron sword
      - Src:
          Object: player
          Preconditions:
            - and:
                - eq: [ is_sleeping, 0 ]
                - eq: [ meta.action_id, 6 ]
                - gte: [ inv_wood, 1 ]
                - gte: [ inv_iron, 1 ]
                - gte: [ inv_coal, 1 ]
                - eq: [ near_furnace, 1 ]
                - eq: [ near_table, 1 ]
                - lt: [ inv_iron_sword, 1 ]
          Commands:
            - decr: inv_coal
            - decr: inv_wood
            - decr: inv_iron
            - if:
                Conditions:
                  lt: [ ach_make_iron_sword, 1 ]
                OnTrue:
                  - set: [ ach_make_iron_sword, 1 ]
                  - reward: 1
        Dst:
          Object: player
          Commands:
            - set: [ inv_iron_sword, 1 ]
            - set: [ damage, 5 ]

  - Name: sleep
    InputMapping:
      Relative: true
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
          Description: "Go to sleep"
    Behaviours:
      - Src:
          Object: player
          Commands:
            - set: [ is_sleeping, 1 ]
            - set_tile: 5
        Dst:
          Object: player

  ################# TABLE AND FURNACE #######################

  - Name: near_table_on
    Trigger:
      Type: RANGE_BOX_AREA
      Range: 1
    Behaviours:
      - Src:
          Object: table
        Dst:
          Object: player
          Commands:
            - set: [ near_table, 1 ]

  - Name: near_table_off
    Trigger:
      Type: RANGE_BOX_BOUNDARY
      Range: 2
    Behaviours:
      - Src:
          Object: table
        Dst:
          Object: player
          Commands:
            - set: [ near_table, 0 ]

  - Name: near_furnace_on
    Trigger:
      Type: RANGE_BOX_AREA
      Range: 1
    Behaviours:
      - Src:
          Object: furnace
        Dst:
          Object: player
          Commands:
            - set: [ near_furnace, 1 ]

  - Name: near_furnace_off
    Trigger:
      Type: RANGE_BOX_BOUNDARY
      Range: 2
    Behaviours:
      - Src:
          Object: furnace
        Dst:
          Object: player
          Commands:
            - set: [ near_furnace, 0 ]


  ##################### ATTACK COOLDOWN #####################

  - Name: act_attack_cooldown
    InputMapping:
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
      Internal: true
    Behaviours:
      - Src:
          Object: zombie
          Commands:
            - set: [ attack_cooldown, 0 ]
        Dst:
          Object: zombie


  ################# SKELETON MECHANICS ######################
  - Name: skeleton_random_movement
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
        2:
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
        3:
          OrientationVector: [ 0, 1 ]
          VectorToDest: [ 0, 1 ]
        4:
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
      Internal: true
    Behaviours:
      - Src:
          Object: skeleton
          Preconditions:
            - eq: [ is_chasing, 0 ]
          Commands:
            - mov: _dest
            - rot: _dir
            - exec:
                Action: skeleton_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: [ path ]

      - Src:
          Object: skeleton
          Preconditions:
            - eq: [ is_chasing, 0 ]
          Commands:
            - exec:
                Action: skeleton_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: [ _boundary, _empty, grass, sand, cow, water, stone, plant, tree, player, zombie, skeleton, coal, lava, iron, diamond, table, furnace ]

  - Name: skeleton_chase_player
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
        2:
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
        3:
          OrientationVector: [ 0, 1 ]
          VectorToDest: [ 0, 1 ]
        4:
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
      Internal: true
    Behaviours:
      - Src:
          Object: skeleton
          Commands:
            - set: [ src.chase_cooldown, 0 ]
            - mov: _dest
            - rot: _dir
        Dst:
          Object: path
      - Src:
          Object: skeleton
          Commands:
            - set: [ src.chase_cooldown, 0 ]
        Dst:
          Object: [ _boundary, cow, player, arrow, water, grass, sand, stone, plant, skeleton, zombie, coal, lava, iron, diamond, table, furnace ]

  - Name: skeleton_chase_proximity_trigger_off
    Trigger:
      Range: 9
      Type: RANGE_BOX_BOUNDARY
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Object: skeleton
          Preconditions:
            - eq: [ src.is_chasing, 1 ]
          Commands:
            - set: [ src.is_chasing, 0 ]
            - exec:
                Action: skeleton_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: player

  - Name: skeleton_chase_proximity_trigger_on
    Trigger:
      Range: 8
      Type: RANGE_BOX_AREA
    InputMapping:
      Internal: true
    Probability: 0.3
    Behaviours:
      - Src:
          Preconditions:
            - eq: [ src.chase_cooldown, 0 ]
          Object: skeleton
          Commands:
            - set: [ src.is_chasing, 1 ]
            - set: [ src.chase_cooldown, 1 ]
            - exec:
                Action: skeleton_chase_player
                Delay: 3
                Search:
                  ImpassableObjects: [ water, cow, stone, tree, zombie, skeleton, plant, coal, lava, iron, diamond, table, furnace ]
                  TargetObjectName: player
        Dst:
          Object: player

  - Name: arrow_projectile
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Object: arrow
          Commands:
            - mov: _dest
            - exec:
                Action: arrow_projectile
                Delay: 1
        Dst:
          Object: [ water, path, grass, sand ]

      - Src:
          Object: arrow
          Commands:
            - remove: true
        Dst:
          Object: [ _boundary, _empty, arrow, tree, stone, plant, coal, lava, iron, diamond ]

      - Src:
          Object: arrow
          Commands:
            - remove: true
        Dst:
          Object: [ cow, zombie, skeleton ]
          Commands:
            - sub: [ health, 2 ]
            - if:
                Conditions:
                  lte: [ health, 0 ]
                OnTrue:
                  - remove: true
      - Src:
          Object: arrow
          Commands:
            - remove: true
        Dst:
          Object: player
          Commands:
            - sub: [ health, 2 ]
            - if:
                Conditions:
                  lte: [ health, 0 ]
                OnTrue:
                  - set: [ dst.player_done, 1 ]
                  - decr: player_count
                  - remove: true
      - Src:
          Object: arrow
          Commands:
            - remove: true
        Dst:
          Object: [ table, furnace ]
          Commands:
            - remove: true

  - Name: set_arrow_direction
    InputMapping:
      Internal: true
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
    Behaviours:
      - Src:
          Object: arrow
          Commands:
            - set_tile: meta.image_idx
        Dst:
          Object: [ water, path, grass, sand, arrow ]

  - Name: fire_arrow
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
          MetaData:
            image_idx: 0
        2:
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
          MetaData:
            image_idx: 1
        3:
          OrientationVector: [ 0, 1 ]
          VectorToDest: [ 0, 1 ]
          MetaData:
            image_idx: 2
        4:
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
          MetaData:
            image_idx: 3
      Internal: true
    Behaviours:
      - Src:
          Object: skeleton
        Dst:
          Object: [ water, path, grass, sand ]
          Commands:
            - spawn: arrow

  - Name: reload_arrow
    InputMapping:
      Inputs:
        1:
          VectorToDest: [ 0, 0 ]
      Internal: true
    Behaviours:
      - Src:
          Object: skeleton
          Commands:
            - set: [ src.reload_cooldown, 0 ]
        Dst:
          Object: skeleton

  - Name: skeleton_fire_proximity_trigger
    Probability: 0.5
    Trigger:
      Range: 5
      Type: RANGE_BOX_AREA
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Preconditions:
            - eq: [ src.reload_cooldown, 0 ]
          Object: skeleton
          Commands:
            - set: [ src.reload_cooldown, 1 ]
            - exec:
                Action: reload_arrow
                Delay: 4
                ActionId: 1
            - if:
                Conditions:
                  eq: [ src._dx, 1 ]
                OnTrue:
                  - exec:
                      Action: fire_arrow
                      Delay: 1
                      ActionId: 2
            - if:
                Conditions:
                  eq: [ src._dx, -1 ]
                OnTrue:
                  - exec:
                      Action: fire_arrow
                      Delay: 1
                      ActionId: 4
            - if:
                Conditions:
                  eq: [ src._dy, 1 ]
                OnTrue:
                  - exec:
                      Action: fire_arrow
                      Delay: 1
                      ActionId: 3
            - if:
                Conditions:
                  eq: [ src._dy, -1 ]
                OnTrue:
                  - exec:
                      Action: fire_arrow
                      Delay: 1
                      ActionId: 1
        Dst:
          Object: player
  ###########################################################

  ##################### ZOMBIE MECHANICS ####################

  - Name: zombie_random_movement
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Object: zombie
          Preconditions:
            - eq: [ src.is_chasing, 0 ]
          Commands:
            - mov: _dest
            - exec:
                Action: zombie_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: [ grass, path, sand ]
      - Src:
          Object: zombie
          Preconditions:
            - eq: [ src.is_chasing, 0 ]
          Commands:
            - exec:
                Action: zombie_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: [ _boundary, _empty, cow, water, stone, plant, player, zombie, skeleton, coal, lava, iron, diamond, table, furnace ]

  - Name: zombie_chase_player
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Object: zombie
          Commands:
            - set: [ src.chase_cooldown, 0 ]
            - mov: _dest
        Dst:
          Object: [ grass, path, sand ]

      - Src:
          Object: zombie
          Commands:
            - set: [ src.chase_cooldown, 0 ]
        Dst:
          Object: [ _boundary, cow, water, stone, plant, zombie, skeleton, coal, lava, iron, diamond, table, furnace ]

      # Zombie attacks player
      - Src:
          Object: zombie
          Commands:
            - set: [ src.chase_cooldown, 0 ]
            - if:
                Conditions:
                  eq: [ src.attack_cooldown, 0 ]
                OnTrue:
                  - set: [ src.attack_cooldown, 1 ]
                  - exec:
                      Action: act_attack_cooldown
                      Delay: 5
                      ActionId: 1
        Dst:
          Object: player
          Commands:
            - if:
                Conditions:
                  eq: [ src.attack_cooldown, 0 ]
                OnTrue:
                  - if:
                      Conditions:
                        eq: [ is_sleeping, 1 ]
                      OnTrue:
                        - sub: [ health, 7 ]
                      OnFalse:
                        - sub: [ health, 2 ]
                  - if:
                      Conditions:
                        lte: [ health, 0 ]
                      OnTrue:
                        - set: [ dst.player_done, 1 ]
                        - decr: player_count
                        - remove: true


  - Name: zombie_chase_proximity_trigger_off
    Trigger:
      Range: 9
      Type: RANGE_BOX_BOUNDARY
    InputMapping:
      Internal: true
    Behaviours:
      - Src:
          Object: zombie
          Preconditions:
            - eq: [ src.is_chasing, 1 ]
          Commands:
            - set: [ src.is_chasing, 0 ]
            - exec:
                Action: zombie_random_movement
                Delay: 3
                Randomize: true
        Dst:
          Object: player

  - Name: zombie_chase_proximity_trigger_on
    Trigger:
      Range: 8
      Type: RANGE_BOX_AREA
    InputMapping:
      Internal: true
    Probability: 0.9
    Behaviours:
      - Src:
          Preconditions:
            - eq: [ src.chase_cooldown, 0 ]
          Object: zombie
          Commands:
            - set: [ src.is_chasing, 1 ]
            - set: [ src.chase_cooldown, 1 ]
            - exec:
                Action: zombie_chase_player
                Delay: 2
                Search:
                  ImpassableObjects: [ water, cow, stone, tree, zombie, skeleton, plant, coal, lava, iron, diamond, table, furnace ]
                  TargetObjectName: player
        Dst:
          Object: player
  ###########################################################

  ################### COW MECHANICS #########################

  # Random walk for cows
  - Name: cow_random_movement
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ 1, 0 ]
          VectorToDest: [ 1, 0 ]
          MetaData:
            change_image: 1
            image_idx: 1
        2:
          OrientationVector: [ 0, -1 ]
          VectorToDest: [ 0, -1 ]
          MetaData:
            change_image: 0
        3:
          OrientationVector: [ -1, 0 ]
          VectorToDest: [ -1, 0 ]
          MetaData:
            change_image: 1
            image_idx: 0
        4:
          OrientationVector: [ 0, 1 ]
          VectorToDest: [ 0, 1 ]
          MetaData:
            change_image: 0

      Internal: true
    Behaviours:

      - Src:
          Object: cow
          Commands:
            - mov: _dest
            - exec:
                Action: cow_random_movement
                Delay: 1
                Randomize: true
            - eq:
                Arguments: [ meta.change_image, 1 ]
                Commands:
                  - set_tile: meta.image_idx
        Dst:
          Object: [ grass, path, sand ]

      - Src:
          Object: cow
          Commands:
            - exec:
                Action: cow_random_movement
                Delay: 5
                Randomize: true
        Dst:
          Object: [ _boundary, _empty, cow, water, stone, tree, plant, player, zombie, skeleton, coal, lava, iron, diamond, table, furnace ]

  ###########################################################

  ################# Plant Mechanics #########################

  - Name: plant_ripen
    InputMapping:
      Inputs:
        1:
          OrientationVector: [ 0, 0 ]
          VectorToDest: [ 0, 0 ]
      Internal: true
    Behaviours:
      - Src:
          Object: plant
          Commands:
            - set_tile: 1
            - set: [ ripe, 1 ]
        Dst:
          Object: plant


###########################################################

Objects:
  - Name: player
    MapCharacter: p
    InitialActions:
      - Action: update_player_stats
        Delay: 1
        ActionId: 1
      - Action: init_player
        ActionId: 1
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/player.png
        - Image: sprite2d/player-left.png
        - Image: sprite2d/player-up.png
        - Image: sprite2d/player-right.png
        - Image: sprite2d/player-down.png
        - Image: sprite2d/player-sleep.png


  - Name: water
    MapCharacter: W
    Z: 1
    Observers:
      Sprite2D:
        - Image: sprite2d/water.png
  - Name: grass
    MapCharacter: G
    Z: 1
    Observers:
      Sprite2D:
        - Image: sprite2d/grass.png
  - Name: stone
    MapCharacter: s
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/stone.png
  - Name: path
    Z: 1
    MapCharacter: P
    Observers:
      Sprite2D:
        - Image: sprite2d/path.png
  - Name: sand
    Z: 1
    MapCharacter: S
    Observers:
      Sprite2D:
        - Image: sprite2d/sand.png

  - Name: tree
    Z: 1
    MapCharacter: T
    Observers:
      Sprite2D:
        - Image: sprite2d/tree.png


  - Name: plant
    MapCharacter: '+'
    Z: 2
    Variables:
      - Name: ripe
        InitialValue: 0
    InitialActions:
      - Action: plant_ripen
        Delay: 30
        ActionId: 1
    Observers:
      Sprite2D:
        - Image: sprite2d/plant.png
        - Image: sprite2d/plant-ripe.png

  - Name: lava
    MapCharacter: L
    Z: 1
    Observers:
      Sprite2D:
        - Image: sprite2d/lava.png
  - Name: coal
    MapCharacter: c
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/coal.png
  - Name: iron
    MapCharacter: i
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/iron.png
  - Name: diamond
    MapCharacter: d
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/diamond.png
  - Name: table
    MapCharacter: t
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/table.png
  - Name: furnace
    MapCharacter: f
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/furnace.png

  - Name: fence
    MapCharacter: "}"
    Z: 2
    Observers:
      Sprite2D:
        - Image: sprite2d/fence.png

  - Name: arrow
    Z: 2
    MapCharacter: a
    InitialActions:
      - Action: arrow_projectile
        Delay: 1
      - Action: set_arrow_direction
        ActionId: 1
    Observers:
      Sprite2D:
        - Image: sprite2d/arrow-up.png
        - Image: sprite2d/arrow-right.png
        - Image: sprite2d/arrow-down.png
        - Image: sprite2d/arrow-left.png

  - Name: zombie
    Z: 2
    InitialActions:
      - Action: zombie_random_movement
        Randomize: true
    Variables:
      - Name: health
        InitialValue: 5
      - Name: is_chasing
        InitialValue: 0
      - Name: chase_cooldown
        InitialValue: 0
      - Name: attack_cooldown
        InitialValue: 0
    MapCharacter: '!'
    Observers:
      Sprite2D:
        - Image: sprite2d/zombie.png

  - Name: skeleton
    Z: 2
    MapCharacter: '@'
    InitialActions:
      - Action: skeleton_random_movement
        Randomize: true
    Variables:
      - Name: health
        InitialValue: 3
      - Name: is_chasing
        InitialValue: 0
      - Name: chase_cooldown
        InitialValue: 0
      - Name: reload_cooldown
        InitialValue: 0
    Observers:
      Sprite2D:
        - Image: sprite2d/skeleton.png

  - Name: cow
    InitialActions:
      - Action: cow_random_movement
        Randomize: true
    Variables:
      - Name: health
        InitialValue: 3
    Z: 2
    MapCharacter: '#'
    Observers:
      Sprite2D:
        - Image: sprite2d/cow-left.png
        - Image: sprite2d/cow-right.png