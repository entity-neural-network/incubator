RESET
mines = [(0, 2), (0, 1), (2, 2), (0, 0), (1, 0)]
robots = [(1, 1)]
orbital_cannon_cooldown = 5
orbital_cannon = False
mines = [(2, 1)]
robots = [(2, 0)]
orbital_cannon_cooldown = 0
orbital_cannon = True
mines = [(1, 0), (0, 1), (2, 2)]
robots = [(0, 0), (2, 0)]
orbital_cannon_cooldown = 5
orbital_cannon = False
ENV OBS
[Observation(features={'Mine': [[0, 2], [0, 1], [2, 2], [0, 0], [1, 0]], 'Robot': [[1, 1]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, True, True, True, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0), ('Mine', 1), ('Mine', 2), ('Mine', 3), ('Mine', 4)], 'Robot': [('Robot', 0)]}, end_of_episode_info=None),
 Observation(features={'Mine': [[2, 1]], 'Robot': [[2, 0]], 'Orbital Cannon': [[0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[False, True, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=['Orbital Cannon'], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0)], 'Robot': [('Robot', 0)], 'Orbital Cannon': [('Orbital Cannon', 0)]}, end_of_episode_info=None),
 Observation(features={'Mine': [[1, 0], [0, 1], [2, 2]], 'Robot': [[0, 0], [2, 0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, False, True, False, True], [False, True, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0), ('Mine', 1), ('Mine', 2)], 'Robot': [('Robot', 0), ('Robot', 1)]}, end_of_episode_info=None)]
VEC OBS
VecObs(features={'Mine': RaggedBuffer([
    [
        [0, 2],
        [0, 1],
        [2, 2],
        [0, 0],
        [1, 0],
    ],
    [[2.0, 1.0]],
    [
        [1, 0],
        [0, 1],
        [2, 2],
    ],
], '3 * var * 2 * f32), 'Robot': RaggedBuffer([
    [[1.0, 1.0]],
    [[2.0, 0.0]],
    [
        [0, 0],
        [2, 0],
    ],
], '3 * var * 2 * f32), 'Orbital Cannon': RaggedBuffer([
    [],
    [[0.0]],
    [],
], '3 * var * 1 * f32)}, action_masks={'Move': VecCategoricalActionMask(actors=RaggedBuffer([
    [[5]],
    [[1]],
    [
        [3],
        [4],
    ],
], '3 * var * 1 * i64), mask=RaggedBuffer([
    [[true, true, true, true, true]],
    [[false, true, true, false, true]],
    [
        [true, false, true, false, true],
        [false, true, true, false, true],
    ],
], '3 * var * 5 * bool)), 'Fire Orbital Cannon': VecSelectEntityActionMask(actors=RaggedBuffer([
    [],
    [[2]],
    [],
], '3 * var * 1 * i64), actees=RaggedBuffer([
    [],
    [
        [0],
        [1],
    ],
    [],
], '3 * var * 1 * i64))}, reward=array([0., 0., 0.], dtype=float32), done=array([False, False, False]), end_of_episode_info={})
EMBEDDING
tensor([[ 1.5280, -0.7984,  0.8672, -0.7984, -0.7984],
        [ 0.6134, -0.7676,  1.6895, -0.7676, -0.7676],
        [ 0.1566, -0.8506,  1.8400, -0.2497, -0.8963],
        [-0.8081, -0.7904,  1.4962,  0.9104, -0.8081],
        [-0.9405, -0.5402,  1.2698,  1.1515, -0.9405],
        [ 1.8806,  0.1884, -0.6897, -0.6897, -0.6897],
        [-0.8848, -0.5453,  1.6356,  0.6792, -0.8848],
        [ 1.3690,  1.0691, -0.8127, -0.8127, -0.8127],
        [-0.8059,  1.5626, -0.7685, -0.8059,  0.8175],
        [-0.9405, -0.5402,  1.2698,  1.1515, -0.9405],
        [ 0.6134, -0.7676,  1.6895, -0.7676, -0.7676],
        [ 0.1566, -0.8506,  1.8400, -0.2497, -0.8963],
        [ 1.4806,  0.9317, -0.8041, -0.8041, -0.8041],
        [ 1.3690,  1.0691, -0.8127, -0.8127, -0.8127]], device='cuda:0')
BATCH INDEX
tensor([0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2], device='cuda:0')
INDEX MAP
tensor([ 0,  1,  2,  3,  4,  9,  5, 10, 13,  6,  7,  8, 11, 12],
       device='cuda:0')
ENTITY TYPE
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [1.],
        [2.],
        [0.],
        [0.],
        [0.],
        [1.],
        [1.]], device='cuda:0')
PADPACK INDEX
[[ 0  1  2  3  4  5]
 [ 6  7  8  0  0  0]
 [ 9 10 11 12 13  0]]
PADPACK BATCH
[[ 0.  0.  0.  0.  0.  0.]
 [ 1.  1.  1. nan nan nan]
 [ 2.  2.  2.  2.  2. nan]]
PADPACK INVERSE INDEX
[ 0  1  2  3  4  5  6  7  8 12 13 14 15 16]
ATTN MASK
tensor([[[[False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False]]],


        [[[False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True]]],


        [[[False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [ True,  True,  True,  True,  True,  True]]]], device='cuda:0')
OFFSETS
RaggedBuffer([
    [[0]],
    [[6]],
    [[9]],
], '3 * var * 1 * i64)
VEC ACT
{'Fire Orbital Cannon': RaggedBuffer([
    [],
    [[0]],
    [],
], '3 * var * 1 * i64),
 'Move': RaggedBuffer([
    [[4]],
    [[1]],
    [
        [4],
        [2],
    ],
], '3 * var * 1 * i64)}
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[], actees=[]),
 'Move': CategoricalAction(actors=[('Robot', 0)], actions=array([4]))}
mines = [(0, 2), (2, 2), (0, 0)]
robots = [(1, 1)]
orbital_cannon_cooldown = 5
orbital_cannon = False
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[('Orbital Cannon', 0)], actees=[('Mine', 0)]),
 'Move': CategoricalAction(actors=[('Robot', 0)], actions=array([1]))}
mines = []
robots = [(2, 0)]
orbital_cannon_cooldown = 0
orbital_cannon = True
mines = [(2, 0)]
robots = [(0, 0)]
orbital_cannon_cooldown = 0
orbital_cannon = True
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[], actees=[]),
 'Move': CategoricalAction(actors=[('Robot', 0), ('Robot', 1)], actions=array([4, 2]))}
mines = [(2, 2)]
robots = [(0, 0), (1, 0)]
orbital_cannon_cooldown = 5
orbital_cannon = False
ENV OBS
[Observation(features={'Mine': [[0, 2], [2, 2], [0, 0]], 'Robot': [[1, 1]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, True, True, True, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0), ('Mine', 1), ('Mine', 2)], 'Robot': [('Robot', 0)]}, end_of_episode_info=None),
 Observation(features={'Mine': [[2, 0]], 'Robot': [[0, 0]], 'Orbital Cannon': [[0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, False, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=['Orbital Cannon'], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=True, reward=1.0, ids={'Mine': [('Mine', 0)], 'Robot': [('Robot', 0)], 'Orbital Cannon': [('Orbital Cannon', 0)]}, end_of_episode_info=EpisodeStats(length=10, total_reward=1.0)),
 Observation(features={'Mine': [[2, 2]], 'Robot': [[0, 0], [1, 0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, False, True, False, True], [True, True, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0)], 'Robot': [('Robot', 0), ('Robot', 1)]}, end_of_episode_info=None)]
VEC OBS
VecObs(features={'Mine': RaggedBuffer([
    [
        [0, 2],
        [2, 2],
        [0, 0],
    ],
    [[2.0, 0.0]],
    [[2.0, 2.0]],
], '3 * var * 2 * f32), 'Robot': RaggedBuffer([
    [[1.0, 1.0]],
    [[0.0, 0.0]],
    [
        [0, 0],
        [1, 0],
    ],
], '3 * var * 2 * f32), 'Orbital Cannon': RaggedBuffer([
    [],
    [[0.0]],
    [],
], '3 * var * 1 * f32)}, action_masks={'Move': VecCategoricalActionMask(actors=RaggedBuffer([
    [[3]],
    [[1]],
    [
        [1],
        [2],
    ],
], '3 * var * 1 * i64), mask=RaggedBuffer([
    [[true, true, true, true, true]],
    [[true, false, true, false, true]],
    [
        [true, false, true, false, true],
        [true, true, true, false, true],
    ],
], '3 * var * 5 * bool)), 'Fire Orbital Cannon': VecSelectEntityActionMask(actors=RaggedBuffer([
    [],
    [[2]],
    [],
], '3 * var * 1 * i64), actees=RaggedBuffer([
    [],
    [
        [0],
        [1],
    ],
    [],
], '3 * var * 1 * i64))}, reward=array([0., 1., 0.], dtype=float32), done=array([False,  True, False]), end_of_episode_info={1: EpisodeStats(length=10, total_reward=1.0)})
EMBEDDING
tensor([[ 1.5163, -0.7999,  0.8835, -0.7999, -0.7999],
        [ 0.1166, -0.8531,  1.8482, -0.2208, -0.8908],
        [-0.8005, -0.8005,  1.5103,  0.8913, -0.8005],
        [ 1.9845, -0.3761, -0.4427, -0.7289, -0.4368],
        [-0.9829, -0.4329,  1.1591,  1.2396, -0.9829],
        [ 1.4709,  0.9443, -0.8051, -0.8051, -0.8051],
        [-0.8059,  1.5626, -0.7685, -0.8059,  0.8175],
        [ 0.1166, -0.8531,  1.8482, -0.2208, -0.8908],
        [ 1.4709,  0.9443, -0.8051, -0.8051, -0.8051],
        [ 1.4257,  1.0015, -0.8091, -0.8091, -0.8091]], device='cuda:0')
BATCH INDEX
tensor([0, 0, 0, 0, 1, 1, 1, 2, 2, 2], device='cuda:0')
INDEX MAP
tensor([0, 1, 2, 5, 3, 6, 9, 4, 7, 8], device='cuda:0')
ENTITY TYPE
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [1.],
        [2.],
        [0.],
        [1.],
        [1.]], device='cuda:0')
PADPACK INDEX
[[0 1 2 3]
 [4 5 6 0]
 [7 8 9 0]]
PADPACK BATCH
[[ 0.  0.  0.  0.]
 [ 1.  1.  1. nan]
 [ 2.  2.  2. nan]]
PADPACK INVERSE INDEX
[ 0  1  2  3  4  5  6  8  9 10]
ATTN MASK
tensor([[[[False, False, False, False],
          [False, False, False, False],
          [False, False, False, False],
          [False, False, False, False]]],


        [[[False, False, False,  True],
          [False, False, False,  True],
          [False, False, False,  True],
          [ True,  True,  True,  True]]],


        [[[False, False, False,  True],
          [False, False, False,  True],
          [False, False, False,  True],
          [ True,  True,  True,  True]]]], device='cuda:0')
OFFSETS
RaggedBuffer([
    [[0]],
    [[4]],
    [[7]],
], '3 * var * 1 * i64)
VEC ACT
{'Fire Orbital Cannon': RaggedBuffer([
    [],
    [[1]],
    [],
], '3 * var * 1 * i64),
 'Move': RaggedBuffer([
    [[1]],
    [[2]],
    [
        [2],
        [4],
    ],
], '3 * var * 1 * i64)}
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[], actees=[]),
 'Move': CategoricalAction(actors=[('Robot', 0)], actions=array([1]))}
mines = [(0, 2), (2, 2), (0, 0)]
robots = [(1, 0)]
orbital_cannon_cooldown = 5
orbital_cannon = False
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[('Orbital Cannon', 0)], actees=[('Robot', 0)]),
 'Move': CategoricalAction(actors=[('Robot', 0)], actions=array([2]))}
mines = [(2, 0)]
robots = []
orbital_cannon_cooldown = 0
orbital_cannon = True
mines = [(2, 1)]
robots = [(1, 1)]
orbital_cannon_cooldown = 0
orbital_cannon = True
ENV ACT
{'Fire Orbital Cannon': SelectEntityAction(actors=[], actees=[]),
 'Move': CategoricalAction(actors=[('Robot', 0), ('Robot', 1)], actions=array([2, 4]))}
mines = [(2, 2)]
robots = [(0, 0), (1, 0)]
orbital_cannon_cooldown = 5
orbital_cannon = False
ENV OBS
[Observation(features={'Mine': [[0, 2], [2, 2], [0, 0]], 'Robot': [[1, 0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, True, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0), ('Mine', 1), ('Mine', 2)], 'Robot': [('Robot', 0)]}, end_of_episode_info=None),
 Observation(features={'Mine': [[2, 1]], 'Robot': [[1, 1]], 'Orbital Cannon': [[0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, True, True, True, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=['Orbital Cannon'], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=True, reward=0.0, ids={'Mine': [('Mine', 0)], 'Robot': [('Robot', 0)], 'Orbital Cannon': [('Orbital Cannon', 0)]}, end_of_episode_info=EpisodeStats(length=10, total_reward=0.0)),
 Observation(features={'Mine': [[2, 2]], 'Robot': [[0, 0], [1, 0]]}, actions={'Move': CategoricalActionMask(actor_ids=None, actor_types=['Robot'], mask=[[True, False, True, False, True], [True, True, True, False, True]]), 'Fire Orbital Cannon': SelectEntityActionMask(actor_ids=None, actor_types=[], actee_types=['Mine', 'Robot'], actee_ids=None, mask=None)}, done=False, reward=0.0, ids={'Mine': [('Mine', 0)], 'Robot': [('Robot', 0), ('Robot', 1)]}, end_of_episode_info=None)]
VEC OBS
VecObs(features={'Mine': RaggedBuffer([
    [
        [0, 2],
        [2, 2],
        [0, 0],
    ],
    [[2.0, 1.0]],
    [[2.0, 2.0]],
], '3 * var * 2 * f32), 'Robot': RaggedBuffer([
    [[1.0, 0.0]],
    [[1.0, 1.0]],
    [
        [0, 0],
        [1, 0],
    ],
], '3 * var * 2 * f32), 'Orbital Cannon': RaggedBuffer([
    [],
    [[0.0]],
    [],
], '3 * var * 1 * f32)}, action_masks={'Move': VecCategoricalActionMask(actors=RaggedBuffer([
    [[3]],
    [[1]],
    [
        [1],
        [2],
    ],
], '3 * var * 1 * i64), mask=RaggedBuffer([
    [[true, true, true, false, true]],
    [[true, true, true, true, true]],
    [
        [true, false, true, false, true],
        [true, true, true, false, true],
    ],
], '3 * var * 5 * bool)), 'Fire Orbital Cannon': VecSelectEntityActionMask(actors=RaggedBuffer([
    [],
    [[2]],
    [],
], '3 * var * 1 * i64), actees=RaggedBuffer([
    [],
    [
        [0],
        [1],
    ],
    [],
], '3 * var * 1 * i64))}, reward=array([0., 0., 0.], dtype=float32), done=array([False,  True, False]), end_of_episode_info={1: EpisodeStats(length=10, total_reward=0.0)})
global_step=6 charts/episodic_return=0.5  charts/episodic_length=10.0  charts/episodes=2  meanrew=0.1666666716337204
EMBEDDING
tensor([[ 1.5094, -0.8008,  0.8929, -0.8008, -0.8008],
        [ 0.0799, -0.8510,  1.8545, -0.1932, -0.8901],
        [-0.8140, -0.8008,  1.4167,  1.0122, -0.8140],
        [ 1.4172,  1.0120, -0.8097, -0.8097, -0.8097],
        [-0.8901, -0.5534,  1.6062,  0.7274, -0.8901],
        [ 1.9472, -0.6525, -0.3414, -0.8001, -0.1531],
        [-0.8059,  1.5626, -0.7685, -0.8059,  0.8175],
        [ 0.0799, -0.8510,  1.8545, -0.1932, -0.8901],
        [ 1.4717,  0.9433, -0.8050, -0.8050, -0.8050],
        [ 1.4172,  1.0120, -0.8097, -0.8097, -0.8097]], device='cuda:0')
BATCH INDEX
tensor([0, 0, 0, 0, 1, 1, 1, 2, 2, 2], device='cuda:0')
INDEX MAP
tensor([0, 1, 2, 5, 3, 6, 9, 4, 7, 8], device='cuda:0')
ENTITY TYPE
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [1.],
        [2.],
        [0.],
        [1.],
        [1.]], device='cuda:0')
PADPACK INDEX
[[0 1 2 3]
 [4 5 6 0]
 [7 8 9 0]]
PADPACK BATCH
[[ 0.  0.  0.  0.]
 [ 1.  1.  1. nan]
 [ 2.  2.  2. nan]]
PADPACK INVERSE INDEX
[ 0  1  2  3  4  5  6  8  9 10]
ATTN MASK
tensor([[[[False, False, False, False],
          [False, False, False, False],
          [False, False, False, False],
          [False, False, False, False]]],


        [[[False, False, False,  True],
          [False, False, False,  True],
          [False, False, False,  True],
          [ True,  True,  True,  True]]],


        [[[False, False, False,  True],
          [False, False, False,  True],
          [False, False, False,  True],
          [ True,  True,  True,  True]]]], device='cuda:0')
EMBEDDING
tensor([[-0.9388, -0.5462,  1.2315,  1.1923, -0.9388],
        [ 0.5493, -0.7579,  1.7243, -0.7579, -0.7579],
        [ 0.1007, -0.8519,  1.8510, -0.2088, -0.8910],
        [ 1.4701,  0.9454, -0.8052, -0.8052, -0.8052],
        [-0.6317, -0.2171, -1.3504,  1.4919,  0.7073],
        [-0.8881, -0.5524,  1.6146,  0.7141, -0.8881],
        [-0.6317, -0.2171, -1.3504,  1.4919,  0.7073],
        [-0.8059,  1.5626, -0.7685, -0.8059,  0.8175],
        [-0.9852, -0.4242,  1.1224,  1.2722, -0.9852],
        [ 1.4701,  0.9454, -0.8052, -0.8052, -0.8052],
        [-0.8059,  1.5626, -0.7685, -0.8059,  0.8175],
        [ 1.5272, -0.7985,  0.8683, -0.7985, -0.7985],
        [ 0.5493, -0.7579,  1.7243, -0.7579, -0.7579],
        [ 0.1007, -0.8519,  1.8510, -0.2088, -0.8910],
        [-0.8073, -0.8073,  1.4461,  0.9757, -0.8073],
        [-0.9388, -0.5462,  1.2315,  1.1923, -0.9388],
        [ 1.9512, -0.6427, -0.2745, -0.8061, -0.2279],
        [ 1.5272, -0.7985,  0.8683, -0.7985, -0.7985],
        [ 0.1007, -0.8519,  1.8510, -0.2088, -0.8910],
        [-0.8073, -0.8073,  1.4461,  0.9757, -0.8073],
        [ 1.9512, -0.6427, -0.2745, -0.8061, -0.2279],
        [ 0.1007, -0.8519,  1.8510, -0.2088, -0.8910],
        [ 1.4701,  0.9454, -0.8052, -0.8052, -0.8052],
        [ 1.4173,  1.0118, -0.8097, -0.8097, -0.8097]], device='cuda:0',
       grad_fn=<IndexBackward0>)
BATCH INDEX
tensor([0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5],
       device='cuda:0')
INDEX MAP
tensor([ 0,  1,  2, 14, 15,  3, 16, 22,  4, 17, 23,  5,  6,  7,  8,  9, 18, 10,
        11, 12, 19, 13, 20, 21], device='cuda:0')
ENTITY TYPE
tensor([[0.],
        [0.],
        [0.],
        [1.],
        [1.],
        [0.],
        [1.],
        [2.],
        [0.],
        [1.],
        [2.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [0.],
        [0.],
        [1.],
        [0.],
        [1.],
        [1.]], device='cuda:0')
PADPACK INDEX
[[ 0  1  2  3  4  0]
 [ 5  6  7  8  9 10]
 [11 12 13 14 15 16]
 [17 18 19 20  0  0]
 [21 22 23  0  0  0]]
PADPACK BATCH
[[ 0.  0.  0.  0.  0. nan]
 [ 1.  1.  1.  2.  2.  2.]
 [ 3.  3.  3.  3.  3.  3.]
 [ 4.  4.  4.  4. nan nan]
 [ 5.  5.  5. nan nan nan]]
PADPACK INVERSE INDEX
[ 0  1  2  3  4  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 24 25 26]
ATTN MASK
tensor([[[[False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [False, False, False, False, False,  True],
          [ True,  True,  True,  True,  True,  True]]],


        [[[False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [ True,  True,  True, False, False, False],
          [ True,  True,  True, False, False, False],
          [ True,  True,  True, False, False, False]]],


        [[[False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False],
          [False, False, False, False, False, False]]],


        [[[False, False, False, False,  True,  True],
          [False, False, False, False,  True,  True],
          [False, False, False, False,  True,  True],
          [False, False, False, False,  True,  True],
          [ True,  True,  True,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True]]],


        [[[False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [False, False, False,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True],
          [ True,  True,  True,  True,  True,  True]]]], device='cuda:0')
OFFSETS
RaggedBuffer([
    [[0]],
    [[5]],
    [[8]],
    [[11]],
    [[17]],
    [[21]],
], '6 * var * 1 * i64)
